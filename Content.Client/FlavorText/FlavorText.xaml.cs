using Content.Shared._Green.Notes;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.FlavorText
{
    [GenerateTypedNameReferences]
    public sealed partial class FlavorText : Control
    {
        public Action<string>? OnFlavorTextChanged;
        public Action<ErpPreference>? OnErpChanged; // Green-Notes

        public FlavorText()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            var loc = IoCManager.Resolve<ILocalizationManager>();
            CFlavorTextInput.Placeholder = new Rope.Leaf(loc.GetString("flavor-text-placeholder"));
            CFlavorTextInput.OnTextChanged  += _ => FlavorTextChanged();

            // Green-Notes-Start
            ErpButton.AddItem(Loc.GetString("humanoid-profile-editor-erp-against-text"), (int)ErpPreference.Against);
            ErpButton.AddItem(Loc.GetString("humanoid-profile-editor-erp-no-text"), (int)ErpPreference.No);
            ErpButton.AddItem(Loc.GetString("humanoid-profile-editor-erp-yes-text"), (int)ErpPreference.Yes);

            ErpButton.OnItemSelected += e => ErpChanged(e.Id);
            // Green-Notes-End
        }

        public void FlavorTextChanged()
        {
            OnFlavorTextChanged?.Invoke(Rope.Collapse(CFlavorTextInput.TextRope).Trim());
        }

        // Green-Notes-Start
        public void ErpChanged(int id)
        {
            OnErpChanged?.Invoke((ErpPreference)id);
            ErpButton.SelectId(id);
        }
        // Green-Notes-End
    }
}
